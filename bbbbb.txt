import pandas as pd
import numpy as np
import os
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
import joblib

# Load data
DATA_PATH = os.path.join("..", "data", "crop_yield_predictionnn.csv")
df = pd.read_csv(DATA_PATH)

# Basic preprocessing
df.dropna(inplace=True)  # Remove missing values

# Encode categorical columns if necessary
for col in df.select_dtypes(include='object').columns:
    df[col] = df[col].astype('category').cat.codes

# Features and target
X = df.drop(columns=['Yield'])  # replace 'Yield' with actual target column if different
y = df['Yield']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluation
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R^2 Score: {r2:.2f}")

# Save model
os.makedirs("../models", exist_ok=True)
joblib.dump(model, "../models/crop_yield_model.pkl")







